///Requisitos Funcionais///
- O sistema deve realizar login e cadastro
- Confirmação de cadastro
- Recuperação de senha
- O sistema deve exibir uma lista para o paciente com os médicos cadastrados no site
- O sistema deve exibir uma lista com as consultas agendadas para o paciente
- O sistema deve exibir uma lista com as consultas marcadas para o médico
- O sistema deve enviar um email para o paciente/médico sempre que houver uma marcação/cancelamento de consulta
- Todas as listas devem possuir filtros, ex (nome do médico, endereço, plano de saúde, especialização, horário de atendimento e etc).

///Banco de Dados///
Pacientes
- id_paciente*
- nome_completo*
- cpf*
- data_nascimento*
- email*
- senha*
- plano_de_saude

Médicos
- id_medico*
- nome_completo*
- cpf*
- data_nascimento*
- email*
- senha*
- crm*
- especialidade
- endereço_consultorio

Consultas
- id_consulta*
- id_paciente*
- id_medico*
- data_inicio*
- data_fim*
- status* 

Token (ou criar um token para pacientes e outro para médicos)
- id_token
- cpf
- hash
- used
- expirado_em

Notas
- Verificar se o CRM é válido



Comandos SQL

create database consulta10
default character set utf8
default collate utf8_general_ci;

use consulta10;

create table pacientes (
	id_paciente int primary key auto_increment,
    nome varchar(100) not null,
    cpf varchar(30) not null,
    data_nascimento date not null,
    email varchar(100) not null,
    senha varchar (32) not null,
    plano_de_saude varchar(100) not null
)default charset=utf8;

create table medicos (
	id_medico int primary key auto_increment,
    nome varchar(100) not null,
    cpf varchar(30) not null,
    data_nascimento date not null,
    email varchar(100) not null,
    senha varchar(32) not null,
    crm varchar(50) not null,
    especialidade varchar(100) not null,
    endereço varchar(100) not null
)default charset=utf8;

create table consultas (
	id_consulta int primary key auto_increment,
    id_paciente int not null,
    id_medico int not null,
    data_inicio datetime,
    data_fim datetime,
    status enum('0', '1') default '1',
    constraint consultas_id_paciente foreign key(id_paciente) references pacientes(id_paciente),
    constraint consultas_id_medico foreign key(id_medico) references medicos(id_medico)
)default charset=utf8;

create table tokens_pacientes (
	id_token int primary key auto_increment,
    id_paciente int not null,
    hash varchar(32) not null,
    used enum('0', '1') default '0',
    expirado_em datetime not null,
    constraint tokens_id_paciente foreign key(id_paciente) references pacientes(id_paciente)
)default charset=utf8;

create table tokens_medicos (
	id_token int primary key auto_increment,
    id_medico int not null,
    hash varchar(32) not null,
    used enum('0', '1') default '0',
    expirado_em datetime not null,
    constraint tokens_id_medico foreign key(id_medico) references medicos(id_medico)
)default charset=utf8;